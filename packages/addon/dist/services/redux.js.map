{"version":3,"file":"redux.js","sources":["../../src/services/redux.js"],"sourcesContent":["import { get } from '@ember/object';\nimport { assert } from '@ember/debug';\nimport { isArray } from '@ember/array';\nimport Service from '@ember/service';\nimport redux from 'redux';\nimport reducers from '../reducers/index';\nimport enhancers from '../enhancers/index';\nimport middlewares from '../middleware/index';\n\n// Handle \"classic\" middleware exports (i.e. an array), as well as the hash option\nconst extractMiddlewareConfig = (mc) => {\n  assert(\n    'Middleware must either be an array, or a hash containing a `middleware` property',\n    isArray(mc) || mc.middleware\n  );\n  return isArray(mc) ? { middleware: mc } : mc;\n}\n\nconst { createStore, applyMiddleware, compose } = redux;\n\nconst makeStoreInstance = ({middlewares, reducers, enhancers}) => {\n  const { middleware, setup = () => {} } = extractMiddlewareConfig(middlewares);\n  const createStoreWithMiddleware = compose(applyMiddleware(...middleware), enhancers)(createStore);\n  const store = createStoreWithMiddleware(reducers);\n  setup(store);\n  return store;\n};\n\nexport default Service.extend({\n  middlewares,\n  reducers,\n  enhancers,\n  makeStoreInstance,\n  init() {\n    const enhancers = get(this, 'enhancers');\n    const reducers = get(this, 'reducers');\n    const middlewares = get(this, 'middlewares');\n    this.store = this.makeStoreInstance({ middlewares, reducers, enhancers });\n    this._super(...arguments);\n  },\n  getState() {\n    return this.store.getState();\n  },\n  dispatch(action) {\n    return this.store.dispatch(action);\n  },\n  subscribe(func) {\n    return this.store.subscribe(func);\n  },\n  replaceReducer(nextReducer) {\n    return this.store.replaceReducer(nextReducer);\n  }\n});\n"],"names":["extractMiddlewareConfig","mc","assert","isArray","middleware","createStore","applyMiddleware","compose","redux","makeStoreInstance","middlewares","reducers","enhancers","setup","createStoreWithMiddleware","store","Service","extend","init","get","_super","arguments","getState","dispatch","action","subscribe","func","replaceReducer","nextReducer"],"mappings":";;;;;;;;;AASA;AACA,MAAMA,uBAAuB,GAAIC,EAAE,IAAK;EACtCC,MAAM,CACJ,kFAAkF,EAClFC,OAAO,CAACF,EAAE,CAAC,IAAIA,EAAE,CAACG,UACpB,CAAC,CAAA;AACD,EAAA,OAAOD,OAAO,CAACF,EAAE,CAAC,GAAG;AAAEG,IAAAA,UAAU,EAAEH,EAAAA;AAAG,GAAC,GAAGA,EAAE,CAAA;AAC9C,CAAC,CAAA;AAED,MAAM;EAAEI,WAAW;EAAEC,eAAe;AAAEC,EAAAA,OAAAA;AAAQ,CAAC,GAAGC,OAAK,CAAA;AAEvD,MAAMC,iBAAiB,GAAGA,CAAC;EAACC,WAAW;EAAEC,QAAQ;AAAEC,EAAAA,SAAAA;AAAS,CAAC,KAAK;EAChE,MAAM;IAAER,UAAU;IAAES,KAAK,GAAGA,MAAM,EAAC;AAAE,GAAC,GAAGb,uBAAuB,CAACU,WAAW,CAAC,CAAA;AAC7E,EAAA,MAAMI,yBAAyB,GAAGP,OAAO,CAACD,eAAe,CAAC,GAAGF,UAAU,CAAC,EAAEQ,SAAS,CAAC,CAACP,WAAW,CAAC,CAAA;AACjG,EAAA,MAAMU,KAAK,GAAGD,yBAAyB,CAACH,QAAQ,CAAC,CAAA;EACjDE,KAAK,CAACE,KAAK,CAAC,CAAA;AACZ,EAAA,OAAOA,KAAK,CAAA;AACd,CAAC,CAAA;AAED,YAAeC,OAAO,CAACC,MAAM,CAAC;EAC5BP,WAAW;EACXC,QAAQ;EACRC,SAAS;EACTH,iBAAiB;AACjBS,EAAAA,IAAIA,GAAG;AACL,IAAA,MAAMN,SAAS,GAAGO,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,CAAA;AACxC,IAAA,MAAMR,QAAQ,GAAGQ,GAAG,CAAC,IAAI,EAAE,UAAU,CAAC,CAAA;AACtC,IAAA,MAAMT,WAAW,GAAGS,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,CAAA;AAC5C,IAAA,IAAI,CAACJ,KAAK,GAAG,IAAI,CAACN,iBAAiB,CAAC;MAAEC,WAAW;MAAEC,QAAQ;AAAEC,MAAAA,SAAAA;AAAU,KAAC,CAAC,CAAA;AACzE,IAAA,IAAI,CAACQ,MAAM,CAAC,GAAGC,SAAS,CAAC,CAAA;GAC1B;AACDC,EAAAA,QAAQA,GAAG;AACT,IAAA,OAAO,IAAI,CAACP,KAAK,CAACO,QAAQ,EAAE,CAAA;GAC7B;EACDC,QAAQA,CAACC,MAAM,EAAE;AACf,IAAA,OAAO,IAAI,CAACT,KAAK,CAACQ,QAAQ,CAACC,MAAM,CAAC,CAAA;GACnC;EACDC,SAASA,CAACC,IAAI,EAAE;AACd,IAAA,OAAO,IAAI,CAACX,KAAK,CAACU,SAAS,CAACC,IAAI,CAAC,CAAA;GAClC;EACDC,cAAcA,CAACC,WAAW,EAAE;AAC1B,IAAA,OAAO,IAAI,CAACb,KAAK,CAACY,cAAc,CAACC,WAAW,CAAC,CAAA;AAC/C,GAAA;AACF,CAAC,CAAC;;;;"}